#pragma checksum "C:\Users\Radek\Desktop\inzynierka\dyplomowanie_inżynierka\Radoslaw Mikoś - Praca inżynierska\SurveyUP\Pages\Summary.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2264ed326c53f3bf1d2a4ef979e5847e1226f0e4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_Summary), @"mvc.1.0.razor-page", @"/Pages/Summary.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Radek\Desktop\inzynierka\dyplomowanie_inżynierka\Radoslaw Mikoś - Praca inżynierska\SurveyUP\Pages\_ViewImports.cshtml"
using SurveyUP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Radek\Desktop\inzynierka\dyplomowanie_inżynierka\Radoslaw Mikoś - Praca inżynierska\SurveyUP\Pages\_ViewImports.cshtml"
using SurveyUP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Radek\Desktop\inzynierka\dyplomowanie_inżynierka\Radoslaw Mikoś - Praca inżynierska\SurveyUP\Pages\_ViewImports.cshtml"
using SurveyUP.Models.Tables;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2264ed326c53f3bf1d2a4ef979e5847e1226f0e4", @"/Pages/Summary.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"78a6c503df0691bd6d471b581a26b3350727beeb", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Summary : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Radek\Desktop\inzynierka\dyplomowanie_inżynierka\Radoslaw Mikoś - Praca inżynierska\SurveyUP\Pages\Summary.cshtml"
  
    ViewData["Title"] = "Podsumowanie";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<p>
<p>
    <h3>Podsumowanie projektu</h3>
<p align=""justify"">
    Celem niniejszej pracy inzynierskiej było stworzenie aplikacji webowej, pozwalajacej
    wprowadzac ankiety ewaluacyjne studentom odbywajacym praktyki. Autor
    zgłebił temat sensu organizowania praktyk dla studentów oraz wyjasnił przeznaczenie
    zaprojektowanego serwisu.

<p align=""justify"">
    Aby lepiej doprecyzowac funkcjonalnosc i uzytecznosc autorskiego systemu, przeanalizowano
    dostepne na rynku narzedzia do tworzenia ankiet. Opisano wystepujace
    pomiedzy nimi podobienstwa i sposób działania oraz wyszczególniono róznice. Poprzez
    przemyslane skonstruowanie projektu na który składał sie miedzy innymi:
    diagram przypadków uzycia, diagram klas, czy schemat bazy danych, udało sie wykonac
    aplikacje oraz zrealizowac wszystkie załozenia projektowe. Po zakonczeniu
    etapu projektowania, autor mógł przystapic do wyboru technologii i potrzebnych
    narzedzi.
</p>
<p align=""justify"">
    Aplikacja zosta");
            WriteLiteral(@"ła stworzona w oparciu o wzorzec architektoniczny MVC. Do
    pobierania danych uzytkowników opracowano dedykowana baze danych w Microsoft
    SQL Server, a do własciwej komunikacji miedzy systemami posłuzono sie Entity
    Frameworkiem.
</p>
<p align=""justify"">
    Serwis miał byc podzielony na dwa interfejsy: studenta (praktykanta) oraz administratora.
    Interfejsy zostały zaprojektowane tak, aby odseparowac od siebie funkcjonalnosci
    dostepne dla róznych typów uzytkowników. Autentykacja połaczona z autoryzacja
    gwarantuje, ze aplikacja jest dostatecznie zabezpieczona. Interfejs studenta
    pozwala w przyjazny i intuicyjny sposób wprowadzac zgromadzone w tradycyjny
    sposób dane. Specjalnie przygotowane podstrony umozliwiaja umieszczanie kwestionariuszy
    zarówno studenta jak i opiekuna praktyk. Administrator systemu moze
    natomiast zmieniac poszczególne pytania, badz tworzyc całe szablony pytan. Dla
    czytelniejszego przegladu ankiety, aplikacja pozwala zajrzec do kwestionar");
            WriteLiteral(@"iusza konkretnego
    studenta. Ponadto osoba zarzadzajaca serwisem ma mozliwosc dokonywania
    analizy odpowiedzi na pytania na podstawie wygodnej funkcjonalnosci tworzenia
    statystyk odpowiedzi na pytania.
</p>
<p align=""justify"">
    Dzieki temu, ze dobrano narzedzia i srodowisko pracy w spójny sposób, mozliwa
    jest skuteczna i bezproblemowa rozbudowa aplikacji. Wykorzystywane biblioteki korzystaja
    z licencji Open Source oraz sa nieustannie rozwijane, co gwarantuje kompatybilnosc
    nowszych rozwiazan i niweluje ryzyko pojawienia sie problemów z obsługa.
<p align=""justify"">
    Aby przekonac sie czy aplikacja działa bez zarzutów w zmiennych warunkach zostały
    opracowane testy zarówno wydajnosciowe jak równiez zadbano o skalowalnosci
    systemu. Testy poszczególnych modułów były przeprowadzane w warunkach normalnego
    obciazenia. Przebiegły one pomyslnie, aplikacja zachowuje płynnosc w działaniu.
    Skalowalnosc w tego typu aplikacjach jest nieodzowna. Z roku na rok ilosc
");
            WriteLiteral(@"    studentów bedzie ulegac zmianie, na co serwis tego typu musi byc przygotowany.
</p>
<p align=""justify"">
    Wdrozenie omawianego systemu wprowadzania ankiet ewaluacyjnych niewatpliwie
    pomogłaby srodowisku akademickiemu w skuteczniejszym zarzadzaniu danymi
    dotyczacymi praktyk. Funkcje dostarczane przez opisana aplikacje webowa wyposazaja
    opiekuna praktyk w niezbedne obecnie narzedzia ułatwiajace prace z wieloma
    studentami i ich kwestionariuszami. Dotychczasowe tradycyjne metody mogły by
    zostac skutecznie zastapione przez ich elektroniczne odpowiedniki.
</p>
<h3> Ocena jakosci platformy i perspektywy rozwoju</h3>
<p align=""justify"">

    Dzieki zastosowaniu technologii ASP.NET oraz wzorca MVC jako podstawy do
    tworzenia serwisu jego mozliwosc rozwoju jest ogromna, poniewaz warstwa prezentacyjna
    oraz sama technologia pozwala na szybki i łatwy sposób dostosowania sie
    do nowych standardów jakie pojawiaja sie na rynku. Wykorzystanie bazy opartej
    o MS SQL Serve");
            WriteLiteral(@"r daje duze szanse na to, ze bedzie wspierana.
</p>
<p align=""justify"">
    Sama technologia HTML 5 oraz ASP.NET Core daje duze mozliwosci adaptacji
    do najnowszych bibliotek. Daje ona mozliwosc adaptacji do najnowszych trendów
    tworzenia stron WWW. Obecnie ze wzgledu na wydajnosc silników przegladarek
    stosuje sie rozbudowane biblioteki JavaScript i/lub CSS. Powoli zaczyna byc adaptowana
    technologia WebAssembly (WASM), która w lepszym stopniu ma
    zabezpieczyc strony oraz zapewnic im jeszcze wieksza wydajnosc. Samo przejscie na
    ta technologie w przypadku tej pracy nie byłoby trudne trudne, wymagałoby jedynie
    dostosowania czesci systemu.
</p>
<p align=""justify"">
    Wykorzystanie technologii ASP.NET Core, Microsoft SQL Server oraz MVC nie
    ogranicza tez samego serwisu do działania tylko na platformie Microsoft Windows.
    Kazdy element tej pracy w 100% bedzie działac tez na platformie Linux. W przypadku
    gdyby była potrzeba sam silnik oparty o ASP.NET Core moze by");
            WriteLiteral(@"c uruchamiany
    na dowolnej platformie łacznie z MacOS.
</p>
<p align=""justify"">
    Dzieki zastosowaniu nowoczesnych standardów oraz dobrze przygotowanej technologicznie
    platformy udało sie stworzyc system, który jest całkowicie i łatwo modyfikowalny
    i dajacy mozliwosc dalszego rozwoju.
</p>

<h3> Wnioski</h3>
<p align=""justify"">
    Wykonujac prace inzynierska autor analizował proces tworzenia systemu, który
    bedzie umozliwiał dalszy rozwój. Wykorzystujac najnowsze dostepne rozwiazania
    udało sie przygotować aplikacje tak, aby mozna było ja niskim nakładem pracy
    dostosowac do nowych wymagan wydajnosciowych.
</p>
<p align=""justify"">
    Sama nauka i rozwój podczas tworzenia projektu był bardzo pouczajacy i dał
    lepszy wglad w istniejace praktyki tworzenia rozbudowanych aplikacji webowych.
    </p>
<p align=""justify"">
    Zastosowana technologia firmy Microsoft pozwoliła na łatwe działanie w systemach
    innych niz Microsoft Windows, a sam jezyk C# umozliwił wykor");
            WriteLiteral("zystanie\r\n    zaawansowanych technik programistycznych.\r\n</p>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SurveyUP.Pages.SummaryModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SurveyUP.Pages.SummaryModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SurveyUP.Pages.SummaryModel>)PageContext?.ViewData;
        public SurveyUP.Pages.SummaryModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
